add(a, b, c, d, size):
new var (appending to table later):i
const (integer): APInt(32b, 0u 0s)
new var (appending to table later):j
Expression: size
new var (appending to table later):k
Operator: +(LHS: i), (RHS: j)

new var (appending to table later):l
new var (appending to table later):m
Operator: =
(LHS:l), (RHS:Operator: +(LHS: m), (RHS: k)

)

0  clang-3.5                0x00000000020c8236 llvm::sys::PrintStackTrace(_IO_FILE*) + 53
1  clang-3.5                0x00000000020c84c6
2  clang-3.5                0x00000000020c7d9f
3  libpthread.so.0          0x00007f82f56893e0
4  libPrintFunctionNames.so 0x00007f82f4781540 clang::DeclRefExpr::getDecl() + 12
5  libPrintFunctionNames.so 0x00007f82f474629e
6  libPrintFunctionNames.so 0x00007f82f4745bcb
7  libPrintFunctionNames.so 0x00007f82f474650e
8  libPrintFunctionNames.so 0x00007f82f474648d
9  libPrintFunctionNames.so 0x00007f82f4745b3f
10 libPrintFunctionNames.so 0x00007f82f474650e
11 libPrintFunctionNames.so 0x00007f82f4745667
12 libPrintFunctionNames.so 0x00007f82f47512bc
13 libPrintFunctionNames.so 0x00007f82f47498b6
14 libPrintFunctionNames.so 0x00007f82f4746e0e
15 libPrintFunctionNames.so 0x00007f82f474c468
16 libPrintFunctionNames.so 0x00007f82f474a6d5
17 libPrintFunctionNames.so 0x00007f82f47471a4
18 libPrintFunctionNames.so 0x00007f82f474579c
19 clang-3.5                0x0000000002fd8a64 clang::ParseAST(clang::Sema&, bool, bool) + 793
20 clang-3.5                0x00000000022bac37 clang::ASTFrontendAction::ExecuteAction() + 323
21 clang-3.5                0x00000000022ba732 clang::FrontendAction::Execute() + 154
22 clang-3.5                0x0000000002286fea clang::CompilerInstance::ExecuteAction(clang::FrontendAction&) + 748
23 clang-3.5                0x00000000023cd372 clang::ExecuteCompilerInvocation(clang::CompilerInstance*) + 1102
24 clang-3.5                0x0000000000fdc810 cc1_main(char const**, char const**, char const*, void*) + 731
25 clang-3.5                0x0000000000fd5963 main + 772
26 libc.so.6                0x00007f82f4a2e830 __libc_start_main + 240
27 clang-3.5                0x0000000000fd2ad9 _start + 41
Stack dump:
0.	Program arguments: /usr/local/bin/clang-3.5 -cc1 -triple x86_64-unknown-linux-gnu -emit-obj -mrelax-all -disable-free -main-file-name basic.c -mrelocation-model static -mdisable-fp-elim -fmath-errno -masm-verbose -mconstructor-aliases -munwind-tables -fuse-init-array -target-cpu x86-64 -dwarf-column-info -coverage-file /home/cchen/Projects/resilience/AST-Plugin/tests/c/basic.o -resource-dir /usr/local/bin/../lib/clang/3.5.2 -internal-isystem /usr/local/include -internal-isystem /usr/local/bin/../lib/clang/3.5.2/include -internal-externc-isystem /usr/include/x86_64-linux-gnu -internal-externc-isystem /include -internal-externc-isystem /usr/include -fdebug-compilation-dir /home/cchen/Projects/resilience/AST-Plugin/tests/c -ferror-limit 19 -fmessage-length 0 -mstackrealign -fobjc-runtime=gcc -fdiagnostics-show-option -load ../../clang-ast-plugin/build/libPrintFunctionNames.so -plugin coverage -o basic.o -x c basic.c 
1.	<eof> parser at end of file
clang-3.5: error: unable to execute command: Segmentation fault (core dumped)
clang-3.5: error: clang frontend command failed due to signal (use -v to see invocation)
clang version 3.5.2 (tags/RELEASE_352/final)
Target: x86_64-unknown-linux-gnu
Thread model: posix
clang-3.5: note: diagnostic msg: PLEASE submit a bug report to http://llvm.org/bugs/ and include the crash backtrace, preprocessed source, and associated run script.
clang-3.5: error: unable to execute command: Segmentation fault (core dumped)
clang-3.5: note: diagnostic msg: Error generating preprocessed source(s).
